# Terraform files
**/.terraform/
**/.terraform.lock.hcl
**/terraform.tfstate
**/terraform.tfstate.backup
**/*.tfstate
**/*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfstate
terraform.tfstate.backup
*.tfstate
*.tfstate.*
terraform.tfvars
terraform.tfvars.json
*.auto.tfvars
*.auto.tfvars.json
.terraformrc
terraform.rc
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# macOS files
.DS_Store

# IDE files
.vscode/
.idea/
*.swp
*.swo

# Build and deployment artifacts
*.zip
*.tar.gz
dist/
build/

# Logs
logs/
*.log

# Environment files
.env
.env.local
.env.*.local

# Node modules (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python cache files
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Testing
.coverage
.pytest_cache/
.tox/
.nox/
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Local development files (hidden)
backend/.main_local.py
scripts/.view_detailed_logs.py
arduino/visitor_display/.test_sounds.py

# Visitor data exports
visitors_export_*.json
detailed_logs_export_*.json

# Arduino logs
arduino/visitor_display/visitor_feeder.log
arduino/visitor_display/visitor_feeder.pid
arduino/visitor_display/launchagent.log
arduino/visitor_display/launchagent.error.log

# Local testing scripts
check_visitors.py
check_visitors.sh
show_visitor_info.py
test_server.py
