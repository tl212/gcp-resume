name: Deploy Infrastructure and Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  TF_VERSION: '1.5.0'
  PROJECT_ID: 'sevenl33-v2-25'
  BUCKET_NAME: 'resume-sevenl33-v2-25'

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Dependencies
      run: |
        pip install -r backend/requirements.txt
        pip install -r tests/requirements_test.txt
    
    - name: Run Unit Tests with Coverage
      run: |
        python -m pytest tests/test_visitor_counter.py -v --cov=backend --cov-report=term-missing
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: .coverage
      if: always()

  terraform-check:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
    
    - name: Terraform Format Check
      working-directory: ./terraform
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -input=false

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [terraform-check, unit-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
    
    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve -input=false

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: terraform-apply
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Deploy Frontend to Cloud Storage
      run: |
        gsutil -m rsync -r -d frontend/website gs://${{ env.BUCKET_NAME }}/

  deploy-function:
    name: Deploy Cloud Function
    runs-on: ubuntu-latest
    needs: terraform-apply
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Enable Required APIs
      run: |
        gcloud services enable cloudresourcemanager.googleapis.com \
          cloudfunctions.googleapis.com \
          cloudbuild.googleapis.com \
          artifactregistry.googleapis.com \
          run.googleapis.com \
          --project=${{ env.PROJECT_ID }}
    
    - name: Deploy Cloud Function
      working-directory: ./backend
      run: |
        gcloud functions deploy visitor-counter \
          --gen2 \
          --runtime python312 \
          --trigger-http \
          --allow-unauthenticated \
          --entry-point visitor_counter \
          --region us-central1 \
          --project ${{ env.PROJECT_ID }} \
          --quiet

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-function]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Test Dependencies
      run: |
        pip install -r tests/requirements_test.txt
        pip install requests
    
    - name: Wait for Deployment to Stabilize
      run: sleep 30
    
    - name: Run Integration Tests
      run: |
        python -m pytest tests/test_integration.py -v
    
    - name: Test Results Summary
      if: always()
      run: |
        echo "Integration tests completed!"
        echo "Check the test output above for details."
